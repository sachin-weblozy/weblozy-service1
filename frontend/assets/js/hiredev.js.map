{"version":3,"file":"/frontend/assets/js/hiredev.js","mappings":"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","sources":["webpack:///./resources/frontend/assets/js/hiredev.js"],"sourcesContent":["window.submitHireDevForm = {\n    showError(form, errors) {\n        if (form.querySelector('.validation-error')) {\n            form.querySelectorAll('.validation-error').forEach(item => {\n                item.remove();\n            });\n        }\n\n        for (const [field, msg] of Object.entries(errors)) {\n            let fieldItem = form.querySelector(`[name=\"${field}\"]`);\n\n            if (fieldItem) {\n                fieldItem.insertAdjacentHTML('afterend', `<div class=\"validation-error small mt-1 text-danger\">${msg}</div>`);\n            }\n        }\n    },\n\n    init(logResponse = true) {\n        let form = document.querySelector('.hiredev-form');\n\n        if (form) {\n            let api_url = \"https://www.weblozy.com/basic/ilp/implementation/form-submit\";\n\n            if (typeof HIRE_API_URL == 'string') {\n                api_url = HIRE_API_URL;\n            }\n\n            form.addEventListener('submit', e => {\n                e.preventDefault();\n\n                let form = e.target;\n\n                let spinner = `<svg class=\"spinner\" viewBox=\"0 0 50 50\">\n                    <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n                </svg>`;\n\n                form.insertAdjacentHTML('afterBegin', spinner);\n\n                let fdata = new FormData(form);\n\n                form.classList.add('waiting');\n\n                let data = {\n                    name: fdata.get('name'),\n                    email: fdata.get('email'),\n                    phone: fdata.get('phone'),\n                    hire_type: fdata.get('hire_type'),\n                    looking_for: fdata.get('looking_for'),\n                    description: fdata.get('description'),\n                    budget: fdata.get('budget'),\n                    start: fdata.get('start'),\n                };\n\n                data.file = document.querySelector('#file').files[0] ?? null;\n\n                if (logResponse) {\n                    console.log(data);\n                }\n\n                axios.post(api_url, data, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                })\n                .then(resp => {\n                    if (logResponse) {\n                        console.log(resp.data);\n                    }\n\n                    form.classList.remove('waiting');\n                    form.querySelector('.spinner').remove();\n\n                    let data = resp.data;\n\n                    let output;\n                    if (data.success) {\n                        if (form.querySelector('.validation-error')) {\n                            form.querySelectorAll('.validation-error').forEach(item => {\n                                item.remove();\n                            });\n                        }\n\n                        output = '<div class=\"mt-2 text-success\">Form submitted successfully.</div>';\n\n                        // setTimeout(() => {\n                        //     let redirectTo = `${SITE_URL}/thank-you?name=${fdata.get('name')}`;\n\n                        //     window.location.href = encodeURI(redirectTo);\n                        // }, 0);\n\n                        form.classList.add('bg-primary', 'text-light');\n\n                        form.querySelector('.form-content').outerHTML = `<div class=\"success\">\n                            <div class=\"icon\">\n                                <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"><circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\"/><path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/></svg>\n                            </div>\n\n                            <p class=\"mt-3 text-center lead fw-normal\">\n                            We have received your request. We will get in touch with you shortly.\n                            </p>\n                        </div>`;\n                    }\n                    else {\n                        let errors = data.errors;\n                        this.showError(form, errors);\n\n                        output = '<div class=\"mt-2 text-danger\">Form submission not successful.</div>';\n                    }\n\n                    form.querySelectorAll('.status').forEach(status => {\n                        status.innerHTML = output;\n                    });\n\n                    // form.querySelector('.status').innerHTML = output;\n                });\n            });\n        }\n    }\n};\n\nsubmitHireDevForm.init();\n"],"names":["window","submitHireDevForm","showError","form","errors","querySelector","querySelectorAll","forEach","item","remove","Object","entries","field","msg","fieldItem","insertAdjacentHTML","init","logResponse","document","api_url","HIRE_API_URL","addEventListener","e","preventDefault","target","spinner","fdata","FormData","classList","add","data","name","get","email","phone","hire_type","looking_for","description","budget","start","file","files","console","log","axios","post","headers","then","resp","output","success","outerHTML","status","innerHTML"],"sourceRoot":""}